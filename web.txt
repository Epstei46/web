**How does the internet work? What happens when you click on a link? **

The internet connects a bunch of smaller networks, from Local Area Networks to Wider Area Networks to ISPs, to the backbone of the internet, which can facilitate connections between machines in different places on different networks. Routing helps direct requests/data along the correct path to retrieve/send the desired information. After clicking on a hypertext link, a request is made for the specific Uniform Resource Locator (URL). This request goes up to the backbone of the internet, down to the DNS server, an IP address is returned back up to the internet which comes back down to your device. With this IP address in hand, the web browser on your computer opens a Transmission Control Protocol (TCP) to a computer running a web server, which connects your computer to the web server at the URL/address provided by the hypertext link. The next step is to ask the web server for the hypertext page (GET request) by using the Hypertext Transfer Protocol (HTTP), and the web server sends back the requested web page hypertext. The web browser allows your computer to "talk" to the web server, interprets the hypertext and renders it to your screen.

Note: I was interested in attempting the Extra Credit, but it's 11pm on Sunday as I type this. If I hadn't used extra time playing with some of the format and different ways to do some of the code, might have had enough time. Oops.







Notes from Crash Course Computer Science (YouTube) #28-#30:

The internet inter-connects a bunch of smaller networks, allowing for inter-network communication. There are multiple paths/switches to get data from one location to another (ROUTING). Data is routed through a process known as MESSAGE SWITCHING. There are multiple routes data can take to get to their targeted location, and if the usual fastest route is being slowed down, the data will go through an alternate (slightly slower) route. Slow down could be caused a large file transfer, so large data transmissions are split into smaller pieces known as PACKETS. Each packet has a destination address on the network so that routers know where to forward them, as well as a file size limit for each packet; this format is defined by the INTERNET PROTOCOL (IP). PACKET SWITCHING describes this process of passing small data packets along flexible routes with spare capacity. Protocols like TCP/IP run on top of IP and can handle issues caused by packets arriving out of order at their destination. Every computer has a unique IP address. Today, routers all over the world work cooperatively to find the most efficient routings by exchanging information with each other using special protocols, such as Internet Control Messaging Protocol (ICMP) & Border Gateway Protocol (BGP). 

The first connection on the way from our devices to the global internet is the Local Area Network (LAN), which connects all the devices in the building/area. This then connects to a Wide Area Network (WAN), which is typically run by your Internet Service Provider (ISP), like AT&T or Verizon. There might be a regional WAN for my neighborhood, a larger WAN for my city, and a few more hops until I get to the backbone of the Internet. My data request (like entering a website URL) might be 4 hops up to the backbone, 2 hops across the backbone, and 4 hops down to the server location my request targeted. Besides the IP address for where the data wants to go, there is also a User Datagram Protocol (UDP) Header with a port number that rides inside data payload of IP packets. Every program on the host computer's Operating System wanting to access the internet will have a unique port number. The IP address gets the packet to the right computer, & UDP gets the packet to the right program on that computer. There is also a checksum which can check if any files were lost or otherwise corrupted, which then notifies the receiving program. Programs like Skype/Zoom work in this way, they can still function of some of the packets are lost, video/audio may just become a little glitchy. But for something like an email, all the packets need to get there, so those use Transmission Control Protocol (TCP) in place of a UDP Header (TCP/IP instead). Packets are given sequential numbers (1,2,3...). Receiving computer can then put the packets in order once they are all received and then return an ACK. ACK could be returned between the transmission of each packet, or a few at a time.

Connecting to a website requires two things: IP Address & Port Number. The Domain Name System (DNS) is a special service on the internet that maps domain names to addresses. So after typing the URL, that goes through the internet to the DNS server, which then looks up the address in it's huge registry and replies with the IP address. If it is a valid URL and a valid IP address is returned, then the browser shoots off a request over TCP for the website's data. Domain structure is more like a tree than a list; top level domains (.gov/.edu/.com/etc) branch down into second level domains (google.com) which branch into sub-domains of parent (drives.google.com).

Open System Interconnection (OSI) model is composed of a few layers, from bottom to top: physical layer (electrical signals in wireless network), data link layer (low level protocols that mediate access to the physical layer include: MAC addresses, collision detection, exponential backoff, etc), network layer (where switching and routing technologies operate), transport layer (protocols responsible for point to point data transfer between computers, like UDP and TCP, as well as error detection and recovery), session layer (where protocols like UDP/TCP are used to open a connection, pass info back and forth, then close the connection when finished [this is a session]), presentation layer, application layer.

The World Wide Web (WWW) runs on top of the internet (same way applications like Minecraft and Facebook do). The internet conveys the data for all those different application. WWW is accessed through a web browser; it is a document containing content which can include links to other pages (hyperlinks). These hyperlinks form a huge web of interconnected info. The unique address for each hypertext page to link to one another is specified by a Uniform Resource Locator (URL). When your computer requests a URL website, it does a DNS lookup. The DNS server takes the domain name (URL) as input and replies back with the corresponding computer's IP address. With that IP address, your web browser opens a TCP connection to a computer running a web server. This connects your computer to the web server at the URL/address provided. Next step is to ask the web server for the hypertext page (GET request) by using the Hypertext Transfer Protocol (HTTP), and the web server sends back the requested web page hypertext. Web browser, which allows your computer to "talk" to the web server, interprets the hypertext and renders it to your screen. Hypertext Markup Language (HML) was developed to "mark up" a text file with hypertext elements; HTML is a great examaple of HML (CSS and JS can be used to make it look even fancier). 

Net Neutrality is the principle that all packets on the internet should be treated equally => given the same speed and priority. Net Neutrality prevents the ability to set up tolls on the internet to provide premium packet delivery to ISPs. This would put competitors, especially small businesses and start-ups, at a disadvantage. But it could be good for a video call to have priority over emails.